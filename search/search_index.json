{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs-Boilerplate \u00b6 For full documentation visit mkdocs.org . What is this? This repo is a compilation of tools and useful macros that can be used to make recursive documentation and more complex autogenerated sites based on mkdocs. Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Extra stuff \u00b6 You will see in some pages a one or two buttons on top. One for making the page \"Fullscreen\" (in every page) and another one for a PDF download, which you can add as an attachment. Check here an example for the PDF feature.","title":"Welcome to MkDocs-Boilerplate"},{"location":"#welcome-to-mkdocs-boilerplate","text":"For full documentation visit mkdocs.org . What is this? This repo is a compilation of tools and useful macros that can be used to make recursive documentation and more complex autogenerated sites based on mkdocs.","title":"Welcome to MkDocs-Boilerplate"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#extra-stuff","text":"You will see in some pages a one or two buttons on top. One for making the page \"Fullscreen\" (in every page) and another one for a PDF download, which you can add as an attachment. Check here an example for the PDF feature.","title":"Extra stuff"},{"location":"demo/","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Demo"},{"location":"Extras/pdf/","text":"This page has an additional cool button to link a PDF.","title":"Pdf"},{"location":"Includes/","text":"Demo includes \u00b6 Advanced Make sure you check the source code of this page to understand what's going on, as it can be confusing... Same project includes \u00b6 This will include the snippet from the same directory: For full documentation visit mkdocs.org . What is this? This repo is a compilation of tools and useful macros that can be used to make recursive documentation and more complex autogenerated sites based on mkdocs. Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Extra stuff \u00b6 You will see in some pages a one or two buttons on top. One for making the page \"Fullscreen\" (in every page) and another one for a PDF download, which you can add as an attachment. Check here an example for the PDF feature. Paths Note that the paths inside the functions are relative to the repository , while the paths inside the markdown files are rleat You can also select a section: mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Check locally first Check the output of your local development mkdocs server before deploying. Also, make sure you set all the links/images with absolute paths : - This is good: `![](/assets/images/photo.png)` - This is **bad**: `![](/assets/images/photo.png)` Remote includes \u00b6 You can do the same from an external url (it has to be a .md file if you want it to be rendered): Main: Contains the Smart Citizen Kit and Smart Citizen Station documentation to help you get started. Visit the Hardware architecture page to understand a bit better how you can better use all the SCK possibilities Data: Contains all the documentation on data, from collection, storage to analysis and calibration: Platform: Contains all the documentation on the online platform where data is collected, stored and visualised API: the documentation of our RESTFUL API and how to interact with it Data Analysis: Contains all the documentation on the data post-processing framework to analyse the sensors data Use cases: Contains documentation and use cases examples how to use our tools with your local community. Guides: Contains step-by-step guides for different features of the kit, how to get started, use the shell, or make some more advanced analysis of the sensor readings! Legacy Hardware: Are you a pioneer of participatory sensing looking for the original SCK 1.0 and SCK 1.1 documentation? Check the Legacy Hardware section! Or from an external git repo (same as above) - but very slow! (make sure it has https or your repo has access to the remote git repo): Only if you bought them separately This guide describes the setup procedure of the Atlas Scientific probes in case you bought them separately. If you have a Water Station , you don't need to do this. Setup \u00b6 Manually switching circuits to I2C mode \u00b6 If the drivers are new normally they come configured in UART mode so we need to change them to I2C mode. Remove circuit from Tentacle shield. Put the circuit into a breadboard. For PH , DO , ORP and EC : Short the PGND pin to the TX pin using a jumper wire. For RTD (temperature): Short the PRB pin to the TX pin using a jumper wire. Power the device (connecting GND and VCC ) Wait for LED to change from green to blue (UART\u2192I2C) or from blue to green (I2C\u2192>UART). Remove the jumper wire from the PGND (or PRB respectively) pin to the TX pin (Do this before removing power! ). Remove power ( VCC ). Apply power ( VCC ). The device is now in the new mode (repeat all steps to switch back to previous mode). Official documentation Atlas Doc Connection to Smartcitizen Kit \u00b6 After connecting the Tentacle 3 to the SCK power your kit and if youre connected to the shell the autodetecition message should look similar to this (depending on the connected drivers and probes): Urban board detected Enable Atlas Temperature Enable Atlas PH Enable Atlas Conductivity Enable Atlas Specific gravity ... Sensor calibration Make sure to follow our sensor calibration guide for the water sensors . Raspberry setup \u00b6 Install raspbian Enable I2C with raspi-config, reboot, upgrade. Install packages and reboot. sudo apt-get install python-smbus i2c-tools Connect the shield with the pi off. Test I2C sudo i2cdetect -y 1 Code example https://github.com/AtlasScientific/Raspberry-Pi-sample-code/blob/master/i2c.py May take a while It may take a while if you use this last option because the repo is cloned everytime. It is clone in your /tmp folder - so if something doesn't work check your terminal output (not tested on every platform) Credit This is an extension of the functionality given by mkdocs-snippet-plugin and the markdown snippet extension. This simply tries to combine both in a simpler way.","title":"Demo includes"},{"location":"Includes/#demo-includes","text":"Advanced Make sure you check the source code of this page to understand what's going on, as it can be confusing...","title":"Demo includes"},{"location":"Includes/#same-project-includes","text":"This will include the snippet from the same directory: For full documentation visit mkdocs.org . What is this? This repo is a compilation of tools and useful macros that can be used to make recursive documentation and more complex autogenerated sites based on mkdocs.","title":"Same project includes"},{"location":"Includes/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"Includes/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Includes/#extra-stuff","text":"You will see in some pages a one or two buttons on top. One for making the page \"Fullscreen\" (in every page) and another one for a PDF download, which you can add as an attachment. Check here an example for the PDF feature. Paths Note that the paths inside the functions are relative to the repository , while the paths inside the markdown files are rleat You can also select a section: mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Check locally first Check the output of your local development mkdocs server before deploying. Also, make sure you set all the links/images with absolute paths : - This is good: `![](/assets/images/photo.png)` - This is **bad**: `![](/assets/images/photo.png)`","title":"Extra stuff"},{"location":"Includes/#remote-includes","text":"You can do the same from an external url (it has to be a .md file if you want it to be rendered): Main: Contains the Smart Citizen Kit and Smart Citizen Station documentation to help you get started. Visit the Hardware architecture page to understand a bit better how you can better use all the SCK possibilities Data: Contains all the documentation on data, from collection, storage to analysis and calibration: Platform: Contains all the documentation on the online platform where data is collected, stored and visualised API: the documentation of our RESTFUL API and how to interact with it Data Analysis: Contains all the documentation on the data post-processing framework to analyse the sensors data Use cases: Contains documentation and use cases examples how to use our tools with your local community. Guides: Contains step-by-step guides for different features of the kit, how to get started, use the shell, or make some more advanced analysis of the sensor readings! Legacy Hardware: Are you a pioneer of participatory sensing looking for the original SCK 1.0 and SCK 1.1 documentation? Check the Legacy Hardware section! Or from an external git repo (same as above) - but very slow! (make sure it has https or your repo has access to the remote git repo): Only if you bought them separately This guide describes the setup procedure of the Atlas Scientific probes in case you bought them separately. If you have a Water Station , you don't need to do this.","title":"Remote includes"},{"location":"Includes/#setup","text":"","title":"Setup"},{"location":"Includes/#manually-switching-circuits-to-i2c-mode","text":"If the drivers are new normally they come configured in UART mode so we need to change them to I2C mode. Remove circuit from Tentacle shield. Put the circuit into a breadboard. For PH , DO , ORP and EC : Short the PGND pin to the TX pin using a jumper wire. For RTD (temperature): Short the PRB pin to the TX pin using a jumper wire. Power the device (connecting GND and VCC ) Wait for LED to change from green to blue (UART\u2192I2C) or from blue to green (I2C\u2192>UART). Remove the jumper wire from the PGND (or PRB respectively) pin to the TX pin (Do this before removing power! ). Remove power ( VCC ). Apply power ( VCC ). The device is now in the new mode (repeat all steps to switch back to previous mode). Official documentation Atlas Doc","title":"Manually switching circuits to I2C mode"},{"location":"Includes/#connection-to-smartcitizen-kit","text":"After connecting the Tentacle 3 to the SCK power your kit and if youre connected to the shell the autodetecition message should look similar to this (depending on the connected drivers and probes): Urban board detected Enable Atlas Temperature Enable Atlas PH Enable Atlas Conductivity Enable Atlas Specific gravity ... Sensor calibration Make sure to follow our sensor calibration guide for the water sensors .","title":"Connection to Smartcitizen Kit"},{"location":"Includes/#raspberry-setup","text":"Install raspbian Enable I2C with raspi-config, reboot, upgrade. Install packages and reboot. sudo apt-get install python-smbus i2c-tools Connect the shield with the pi off. Test I2C sudo i2cdetect -y 1 Code example https://github.com/AtlasScientific/Raspberry-Pi-sample-code/blob/master/i2c.py May take a while It may take a while if you use this last option because the repo is cloned everytime. It is clone in your /tmp folder - so if something doesn't work check your terminal output (not tested on every platform) Credit This is an extension of the functionality given by mkdocs-snippet-plugin and the markdown snippet extension. This simply tries to combine both in a simpler way.","title":"Raspberry setup"}]}